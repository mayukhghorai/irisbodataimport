<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="instrumentReport" class="com.mcx.iris.dictionary.refdata.InstrumentModel" scope="prototype" />

    <batch:job id="instrumentReportJob">
        <batch:step id="step1" next="step2">
            <batch:tasklet ref="deleteTableTasklet" />
        </batch:step>
        <batch:step id="step2">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader" processor="instrumentItemProcessor" writer="mysqlItemWriter"
                             commit-interval="1000">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="instrumentItemProcessor" class="com.mcx.iris.processor.InstrumentDataFilterProcessor" />

    <bean id="deleteTableTasklet" class="com.mcx.iris.processor.DeleteInstrumentDataTasklet">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
                <![CDATA[TRUNCATE TABLE Instrument;]]>
            </value>
        </property>
    </bean>

    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">

        <!-- Read a csv file -->
        <property name="resource" value="file:#{jobParameters[loc]}/MCX_ProductMaster.csv" />
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="InstrumentName,InstrumentId,UniqueIdentifier,UnderlyingUniqueIdentifier,Symbol,UnderlyingAsset,UnderlyingAssetGroup,
                                        OptionType,StrikePrice,ExpiryDate,BasePrice,ProductDesc,QuotationQuantity,QuotationUnit,AuctionBuyIn,AuctionSellOut,T2tAllowed,
                                        Reserved1,TradableLot,PriceTick,NearMonthProductSymbol,FarMonthProductSymbol,ProductStartDateTime,ProductEndDateTime,TenderStartDateTime,
                                        TenderEndDate,DeliveryStartDate,DeliveryEndDate,ExpiryProcessDate,MarginIndicator,RegularBuyMargin,RegularSellMargin,SpecialBuyMargin,
                                        SpecialSellMargin,TenderBuyMargin,TenderSellMargin,DeliveryBuyMargin,DeliverySellMargin,LimitForAllClient,LimitForOnlyAllClient,
                                        LimitForOnlyAllOwn,LimitPerClientAccount,LimitPerOwnAccount,SpreadBenefitAllowed,RecordDeleted,Remarks,PriceNumerator,
                                        PriceDenominator,GeneralNumerator,GeneralDenominator,LotNumerator,LotDenominator,DecimalLocator,BlockDeal,CurrencyCode,Reserved2,
                                        DeliveryWeight,DeliveryUnit,ProductMonth,TradeGroupID,MatchingNo,PreOpenSession,SpreadType,ExtremeLossBuyMargin,ExtremeLossSellMargin,
                                        OptionPricingMethod,ThresholdLimit,BP"
                        />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <!-- return back to reader, rather than a mapped object. -->
                    <!--
                <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
                     -->
                    <!-- map to an object -->
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="instrumentReport" />
                        <property name="customEditors">
                            <map>
                                <entry key="java.util.Date">
                                    <ref local="dateEditor" />
                                </entry>
                            </map>
                        </property>
                        <property name="distanceLimit" value="4" />
                    </bean>
                </property>

            </bean>
        </property>

    </bean>


    <bean id="dateEditor" class="org.springframework.beans.propertyeditors.CustomDateEditor">
        <constructor-arg>
            <bean class="java.text.SimpleDateFormat">
                <constructor-arg value="dd-MMM-yyyy" />
            </bean>
        </constructor-arg>
        <constructor-arg value="true" />
    </bean>

    <bean id="mysqlItemWriter"
          class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
                <![CDATA[
            	insert into Instrument(InstrumentName,
InstrumentId,
UniqueIdentifier,
UnderlyingUniqueIdentifier,
Symbol,
UnderlyingAsset,
UnderlyingAssetGroup,
Contract,
OptionType,
StrikePrice,
ExpiryDate,
ExpiryDateInDate,
BasePrice,
ProductDesc,
QuotationQuantity,
QuotationUnit,
AuctionBuyIn,
AuctionSellOut,
T2tAllowed,
Reserved1,
TradableLot,
PriceTick,
NearMonthProductSymbol,
FarMonthProductSymbol,
ProductStartDateTime,
ProductEndDateTime,
TenderStartDateTime,
TenderEndDate,
DeliveryStartDate,
DeliveryEndDate,
ExpiryProcessDate,
MarginIndicator,
RegularBuyMargin,
RegularSellMargin,
SpecialBuyMargin,
SpecialSellMargin,
TenderBuyMargin,
TenderSellMargin,
DeliveryBuyMargin,
DeliverySellMargin,
LimitForAllClient,
LimitForOnlyAllClient,
LimitForOnlyAllOwn,
LimitPerClientAccount,
LimitPerOwnAccount,
SpreadBenefitAllowed,
RecordDeleted,
Remarks,
PriceNumerator,
PriceDenominator,
GeneralNumerator,
GeneralDenominator,
LotNumerator,
LotDenominator,
DecimalLocator,
BlockDeal,
CurrencyCode,
Reserved2,
DeliveryWeight,
DeliveryUnit,
ProductMonth,
TradeGroupID,
TradeClosingTime,
MatchingNo,
PreOpenSession,
SpreadType,
ExtremeLossBuyMargin,
ExtremeLossSellMargin,
OptionPricingMethod,
ThresholdLimit,
DeliveryLot,
IssueStartDate,
IssueMaturityDate)
values (:InstrumentName,
:InstrumentId,
:UniqueIdentifier,
:UnderlyingUniqueIdentifier,
:Symbol,
:UnderlyingAsset,
:UnderlyingAssetGroup,
:Contract,
:OptionType,
:StrikePrice,
:ExpiryDate,
:ExpiryDateInDate,
:BasePrice,
:ProductDesc,
:QuotationQuantity,
:QuotationUnit,
:AuctionBuyIn,
:AuctionSellOut,
:T2tAllowed,
:Reserved1,
:TradableLot,
:PriceTick,
:NearMonthProductSymbol,
:FarMonthProductSymbol,
:ProductStartDateTime,
:ProductEndDateTime,
:TenderStartDateTime,
:TenderEndDate,
:DeliveryStartDate,
:DeliveryEndDate,
:ExpiryProcessDate,
:MarginIndicator,
:RegularBuyMargin,
:RegularSellMargin,
:SpecialBuyMargin,
:SpecialSellMargin,
:TenderBuyMargin,
:TenderSellMargin,
:DeliveryBuyMargin,
:DeliverySellMargin,
:LimitForAllClient,
:LimitForOnlyAllClient,
:LimitForOnlyAllOwn,
:LimitPerClientAccount,
:LimitPerOwnAccount,
:SpreadBenefitAllowed,
:RecordDeleted,
:Remarks,
:PriceNumerator,
:PriceDenominator,
:GeneralNumerator,
:GeneralDenominator,
:LotNumerator,
:LotDenominator,
:DecimalLocator,
:BlockDeal,
:CurrencyCode,
:Reserved2,
:DeliveryWeight,
:DeliveryUnit,
:ProductMonth,
:TradeGroupID,
:TradeClosingTime,
:MatchingNo,
:PreOpenSession,
:SpreadType,
:ExtremeLossBuyMargin,
:ExtremeLossSellMargin,
:OptionPricingMethod,
:ThresholdLimit,
:DeliveryLot,
:IssueStartDate,
:IssueMaturityDate)
            ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean
                    class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>

</beans>