<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="bhavCopyReport" class="com.mcx.iris.dictionary.refdata.BhavCopyModel" scope="prototype" />

    <batch:job id="bhavCopyReportJob">
        <batch:step id="step3">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader2" processor="itemProcessor" writer="mysqlItemWriter2"
                             commit-interval="500">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="itemProcessor" class="com.mcx.iris.processor.BhavCopyDataFilterProcessor" />

    <bean id="cvsFileItemReader2" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">

        <!-- Read a csv file -->
        <property name="resource" value="file:#{jobParameters[loc]}/MCX_MS#{jobParameters[Date]}.csv" />
        <property name="strict" value="false" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="bhavCopyDate,sessionId,mktType,instrumentId,instrumentName,symbol,expiryDate,reserved,
                        strikePrice,optionType,pcp,openPrice,highPrice,lowPrice,closingPrice,totalQtyTrade,totalValueTrade,lifeTimeHigh,
                        lifeTimeLow,quoteUnit,settlementPrice,numberOfTrades,openInterest,atp,reserved2,currencyCode" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <!-- return back to reader, rather than a mapped object. -->
                    <!--
                <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
                     -->
                    <!-- map to an object -->
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="bhavCopyReport" />
                        <property name="customEditors">
                            <map>
                                <entry key="java.util.Date">
                                    <ref local="dateEditor" />
                                </entry>
                            </map>
                        </property>
                    </bean>
                </property>

            </bean>
        </property>

    </bean>

    <bean id="dateEditor" class="org.springframework.beans.propertyeditors.CustomDateEditor">
        <constructor-arg>
            <bean class="java.text.SimpleDateFormat">
                <constructor-arg value="dd-MMM-yyyy" />
            </bean>
        </constructor-arg>
        <constructor-arg value="true" />
    </bean>

    <bean id="mysqlItemWriter2" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
                <![CDATA[INSERT INTO MCXBhavCopy (InstrumentIdentifier,
                BhavCopyDate,
                BhavCopyDateInDate,
                SessionId,MktType,
                InstrumentId,
                InstrumentName,
                Symbol,
            	ExpiryDate,
            	Reserved,
            	StrikePrice,
            	OptionType,
            	PCP,
            	OpenPrice,
            	HighPrice,
            	LowPrice,
            	ClosingPrice,
            	TotalQtyTrade,
            	TotalValueTrade,
            	LifeTimeHigh,
            	LifeTimeLow,
            	QuoteUnit,
            	SettlementPrice,
            	NumberOfTrades,
            	OpenInterest,
            	ATP,Reserved2,
            	CurrencyCode)
                VALUES(:instrumentIdentifier,
                :bhavCopyDate,
                :bhavCopyDateInDate,
                :sessionId,
                :mktType,
                :instrumentId,
                :instrumentName,
                :symbol,
                :expiryDate,
                :reserved,
                :strikePrice,
                :optionType,
                :pcp,
                :openPrice,
                :highPrice,
                :lowPrice,
                :closingPrice,
                :totalQtyTrade,
                :totalValueTrade,
                :lifeTimeHigh,
                :lifeTimeLow,
                :quoteUnit,
                :settlementPrice,
                :numberOfTrades,
                :openInterest,
                :atp,
                :reserved2,
                :currencyCode)
                ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>

</beans>